<?xml version="1.0" encoding="UTF-8"?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *      
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
        <ModulePrefs title="EonDice">
                <Require feature="rpc"/>
                <Require feature="views"/>
                <Require feature="locked-domain"/>
        </ModulePrefs>
        <Content type="html"><![CDATA[

<html>
<link href='https://fonts.googleapis.com/css?family=Gentium+Book+Basic:400,700&subset=latin,latin-ext' rel='stylesheet' type='text/css' />
<style type="text/css">
<!--
* {
    margin: 0px;
    padding: 0px;
}

body {
    background-color: #F2F2F2;
}

h1, h3, h4, li, p {
    font-family: "Gentium Book Basic", sans-serif;
    font-weight: bold;
    color: #333;
    line-height: 1.1;
}

h1 {
    font-size: 36px;
}

h3 {
    font-size: 24px;
}

h4 {
    font-size: 18px;
}

li, p {
    font-weight: normal;
}

ul {
    list-style-type: none;
}

input, textarea {
    font-family: "Gentium Book Basic", sans-serif;
    font-weight: normal;
    font-size: 14px;
    color: #555;
    line-height: 1.4;
}

input[type=button] {
    font-weight: bold;
    font-size: 17px;
}

#display-name {
    width: 10.6em;
}

#output {
    width: 17em;
    height: 6em;
    margin: 1em 0;
}

#left-section {
    display: inline-block;
    vertical-align: top;
}

#right-section {
    display: inline-block;
    vertical-align: top;
    margin-top: 1em;
    /*margin-left: 1em;*/
}

#nx-input {
    margin-bottom: 0.5em;
}

#nx-input input[type=radio] {
    margin-left: 0.5em;
}

#nx-input h4 {
    display: inline;
}

#n-input, #x-input {
    width: 2.5em;
    margin-right: 0.5em;
}

#numpad {
    margin-bottom: 1em;
}

.num-line {
    margin: 0 1em;
    margin-bottom: 0.3em;
}

.num-line input {
    padding: 0px;
    margin: 0px;
    width: 2em;
}

#d6-button, #d10-button {
    width: 6.6em;
}

#debug {
    height: 5em;
}

#save-button {
    margin-bottom: 1em;
}

.save-row h4 {
    display: inline-block;
    text-align: right;
    width: 3.5em;
}

#save-name {
    width: 10.6em;
}

#save-n, #save-x {
    width: 2.5em;
}

.generated-button {
    margin-left: 0.5em;
}
-->
</style>
<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>

<div id="wrap">
  <header>
    <h1>EonDice</h1>
  </header>

  <div id="top-section">
    <h4>
        Visningsnamn:
    </h4>

    <div>
      <input type="text" id="display-name" value=""/>
    </div>

    <div>
      <textarea id="output" readonly></textarea>
    </div>
  </div>

  <div id="bottom-section">
    <div id="left-section">
      <div id="nx-input">
        <input type="radio" name="select-input" id="input-n" checked/>
        <h4>n:</h4>
        <input type="number" id="n-input" min="0" value="0"/>
        <input type="radio" name="select-input"/>
        <h4>x:</h4>
        <input type="number" id="x-input" value="0"/>
      </div>

      <div id="numpad">
        <div class="num-line">
          <input type="button" id="num7" value="7" onclick="numKey(7);"/>
          <input type="button" id="num8" value="8" onclick="numKey(8);"/>
          <input type="button" id="num9" value="9" onclick="numKey(9);"/>
        </div>

        <div class="num-line">
          <input type="button" id="num4" value="4" onclick="numKey(4);"/>
          <input type="button" id="num5" value="5" onclick="numKey(5);"/>
          <input type="button" id="num6" value="6" onclick="numKey(6);"/>
        </div>

        <div class="num-line">
          <input type="button" id="num1" value="1" onclick="numKey(1);"/>
          <input type="button" id="num2" value="2" onclick="numKey(2);"/>
          <input type="button" id="num3" value="3" onclick="numKey(3);"/>
        </div>

        <div class="num-line">
          <input type="button" id="numC" value="C" onclick="numC();"/>
          <input type="button" id="num0" value="0" onclick="numKey(0);"/>
          <input type="button" id="numB" value="⌫" onclick="numB();"/>
        </div>

        <div class="num-line">
          <input type="button" id="d6-button" value="Slå nT6+x" onclick="roll1(6);"/>
        </div>

        <div class="num-line">
          <input type="button" id="d10-button" value="Slå 1T10+x" onclick="roll2(1, 10);"/>
        </div>
      </div>

      <h3>Enskilda slag:</h3>

      <div>
        <textarea id="debug" readonly></textarea>
      </div>
    </div>

    <div id="right-section">
      <h3>Spara slag:</h3>

      <div id="save-input">
        <div class="save-row">
          <h4>Namn:</h4>
          <input type="text" id="save-name"/>
        </div>

        <div class="save-row">
          <h4>n:</h4>
          <input type="number" id="save-n" min="0" value="0"/>
        </div>

        <div class="save-row">
          <h4>x:</h4>
          <input type="number" id="save-x" value="0"/>
        </div>
      </div>

      <input type="button" id="save-button" value="Spara" onclick="saveRoll();"/>

      <h3>Sparade slag:</h3>

      <ul id="saved-rolls">
      </ul>
    </div>
  </div>

  <footer>
    <p>Version 1.1</p>
  </footer>
</div>

<script>
// Keep track of how many messages were sent
var messageLastSeen = {};
var myMessageCount = 0;
var missedMessages = 0;

function numKey(num) {
    var ninp = document.getElementById("input-n");
    var inp;

    if (ninp.checked) {
        inp = document.getElementById("n-input");
    } else {
        inp = document.getElementById("x-input");
    }

    inp.value = inp.value * 10 + num;
}

function numC() {
    var ninp = document.getElementById("input-n");
    var inp;

    if (ninp.checked) {
        inp = document.getElementById("n-input");
    } else {
        inp = document.getElementById("x-input");
    }

    inp.value = 0;
}

function numB() {
    var ninp = document.getElementById("input-n");
    var inp;

    if (ninp.checked) {
        inp = document.getElementById("n-input");
    } else {
        inp = document.getElementById("x-input");
    }

    inp.value = Math.floor(inp.value / 10);
}

function saveRoll() {
    var ul = document.getElementById("saved-rolls");
    var li = document.createElement("li");

    var nameField = document.getElementById("save-name");
    var nField = document.getElementById("save-n");
    var xField = document.getElementById("save-x");

    var name = nameField.value;
    var n = Math.abs(parseInt(nField.value));
    var x = parseInt(xField.value);

    if (name == "") {
        var dbg = document.getElementById("debug");
        dbg.value = "Du måste ge ditt slag ett namn.";
        return;
    }

    var liStr = name + ": " + n + "T6+" + x;
    var rollButton = document.createElement("input");
    var deleteButton = document.createElement("input");

    var rollFunc = "roll3(" + n + ", 6, " + x + ");";
    var deleteFunc = "deleteRoll(\"saved-roll-" + name + "\");";
    rollButton.setAttribute("type", "button");
    deleteButton.setAttribute("type", "button");
    rollButton.setAttribute("value", "Slå");
    deleteButton.setAttribute("value", "Radera");
    rollButton.setAttribute("class", "generated-button");
    deleteButton.setAttribute("class", "generated-button");
    rollButton.setAttribute("onclick", rollFunc);
    deleteButton.setAttribute("onclick", deleteFunc);

    li.setAttribute("id", "saved-roll-" + name);

    li.appendChild(document.createTextNode(liStr));
    li.appendChild(rollButton);
    li.appendChild(deleteButton);

    ul.appendChild(li);

    nameField.value = "";
    nField.value = 0;
    xField.value = 0;
}

function deleteRoll(id) {
    var ul = document.getElementById("saved-rolls");
    var li = document.getElementById(id);
    ul.removeChild(li);
}

function roll1(dx) {
    var n = Math.abs(parseInt(document.getElementById("n-input").value));
    roll2(n, dx);
}

function roll2(n, dx) {
    var x = parseInt(document.getElementById("x-input").value);
    roll3(n, dx, x);
}

function roll3(n, dx, x) {
    var out = document.getElementById("output");
    var name = document.getElementById("display-name").value;
    var sum = 0;

    if (name == "") {
        var dbg = document.getElementById("debug");
        dbg.value = "Du måste ange ett visningsnamn.";
        return;
    }

    if (dx == 6) {
        sum = roll6(n);
    } else {
        sum = roll10();
    }

    sum += x;

    var outputStr = name + " - " + n + "T" + dx + "+" + x + ": " + sum;
    out.value = outputStr + "\n" + out.value;

    myMessageCount++;
    gapi.hangout.data.sendMessage(
        JSON.stringify([myMessageCount,
                        name,
                        n,
                        dx,
                        x,
                        sum]));
}

function roll6(n) {
    var dbg = document.getElementById("debug");
    var url = "";
    var sum = 0;

    var tmpDbg = "";
    var rolls = [];
    var sixes = 0;

    if (n == 0) {
        dbg.value = "0";
        return 0;
    }

    dbg.value = "";

    do {
        tmpDbg = dbg.value;

        if (tmpDbg == "") {
            dbg.value = "...";
        } else {
            dbg.value += "\n...";
        }

        url = "https://www.random.org/integers/?num=" + n + "&min=1&max=6&col=" + n + "&base=10&format=plain&rnd=new";
        rolls = httpGet(url).split("\t");

        for (var i = 0; i < n; i++) {
            rolls[i] = parseInt(rolls[i]);

            if (rolls[i] == 6) {
                sixes++;
            } else {
                sum += rolls[i];
            }
        }

        if (tmpDbg == "") {
            dbg.value = rolls;
        } else {
            dbg.value = tmpDbg + "\n" + rolls;
        }

        n = 2 * sixes;
        sixes = 0;
    } while (n > 0);

    return sum;
}

function roll10() {
    var dbg = document.getElementById("debug");
    var url = "https://www.random.org/integers/?num=1&min=1&max=10&col=1&base=10&format=plain&rnd=new";
    var roll = 0;

    dbg.value = "...";
    roll = parseInt(httpGet(url));
    dbg.value = roll;

    return roll;
}

function httpGet(theUrl) {
    var xmlHttp = null;

    xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", theUrl, false);
    xmlHttp.send(null);

    return xmlHttp.responseText;
}

function showLossRates() {
    console.log("Missed messages: " + missedMessages);
}

var missedPackets = 0;

function droppedPackageCount(senderid, messageid) {
    if (messageLastSeen[senderid] != messageid - 1) {
        missedPackets++;
    }

    messageLastSeen[senderid] = messageid;
    console.log('message id = ' + messageid);
}

function onMessageReceived(event) {
    try {
        var out = document.getElementById("output");
        var data = JSON.parse(event.message);

        var name = data[1];
        var n = parseInt(data[2]);
        var dx = parseInt(data[3]);
        var x = parseInt(data[4]);
        var sum = parseInt(data[5]);

        var outputStr = name + " - " + n + "T" + dx + "+" + x + ": " + sum;
        out.value = outputStr + "\n" + out.value;
        droppedPackageCount(event.senderId, parseInt(data[0]));
        showLossRates();
    } catch (e) {
        console.log(e);
    }
}

function init() {
    gapi.hangout.onApiReady.add(
        function(eventObj) {
            if (eventObj.isApiReady) {
                try {
                    var name = document.getElementById("display-name");
                    name.value = gapi.hangout.getLocalParticipant().person.displayName;
                    gapi.hangout.data.onMessageReceived.add(onMessageReceived);
                } catch (e) {
                    console.log('init:ERROR');
                    console.log(e);
                }
            }
        });
}

gadgets.util.registerOnLoadHandler(init);
</script>
</body>
]]>
</Content>
</Module>
